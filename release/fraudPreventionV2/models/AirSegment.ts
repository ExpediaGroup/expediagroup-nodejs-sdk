/*
 * Copyright (C) 2023 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.

 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { JsonObject, JsonProperty } from 'typescript-json-serializer'

@JsonObject({ constructorParams: [{}] })
export class AirSegment {
    /**
     * Airline code of the trip segment
     */
    @JsonProperty({ name: 'airline_code' })
    airlineCode: string
    /**
     * Departure airport of the trip segment
     */
    @JsonProperty({ name: 'departure_airport_code' })
    departureAirportCode: string
    /**
     * Arrival airport of the trip segment
     */
    @JsonProperty({ name: 'arrival_airport_code' })
    arrivalAirportCode: string
    /**
     * Local date and time of departure from departure location, in ISO-8061 date and time format `yyyy-MM-ddTHH:mm:ss.SSSZ`.
     */
    @JsonProperty({ name: 'departure_time' })
    departureTime?: Date
    /**
     * Local date and time of arrival to destination location, in ISO-8061 date and time format `yyyy-MM-ddTHH:mm:ss.SSSZ`.
     */
    @JsonProperty({ name: 'arrival_time' })
    arrivalTime?: Date

    public constructor(airSegment: AirSegmentProperties) {
        this.airlineCode = airSegment.airlineCode
        this.departureAirportCode = airSegment.departureAirportCode
        this.arrivalAirportCode = airSegment.arrivalAirportCode
        this.departureTime = airSegment.departureTime
        this.arrivalTime = airSegment.arrivalTime
    }
}

export interface AirSegmentProperties {
    airlineCode: string
    departureAirportCode: string
    arrivalAirportCode: string
    departureTime?: Date
    arrivalTime?: Date
}
