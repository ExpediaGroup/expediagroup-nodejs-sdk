/*
 * Copyright (C) 2023 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.

 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { TravelProduct } from './TravelProduct'

import { JsonObject, JsonProperty } from 'typescript-json-serializer'
import { TravelProductProperties } from './TravelProduct'

@JsonObject({ constructorParams: [{}] })
export class Cruise extends TravelProduct {
    /**
     * Local date and time of departure from original departure location, in ISO-8601 date and time format `yyyy-MM-ddTHH:mm:ss.SSSZ`.
     */
    @JsonProperty({ name: 'departure_time' })
    departureTime: Date
    /**
     * Local date and time of arrival from original arrival location, in ISO-8601 date and time format `yyyy-MM-ddTHH:mm:ss.SSSZ`.
     */
    @JsonProperty({ name: 'arrival_time' })
    arrivalTime: Date
    /**
     * Location from where cruise will depart.
     */
    @JsonProperty({ name: 'embarkation_port' })
    embarkationPort: string
    /**
     * The cruise\'s final destination.
     */
    @JsonProperty({ name: 'disembarkation_port' })
    disembarkationPort: string
    /**
     * Name of the cruise ship.
     */
    @JsonProperty({ name: 'ship_name' })
    shipName: string

    @JsonProperty('type')
    readonly type = 'CRUISE'

    public constructor(cruise: CruiseProperties) {
        super({
            price: cruise.price,
            inventoryType: cruise.inventoryType,
            inventorySource: cruise.inventorySource,
            travelersReferences: cruise.travelersReferences,
            payLater: cruise.payLater,
        })
        this.departureTime = cruise.departureTime
        this.arrivalTime = cruise.arrivalTime
        this.embarkationPort = cruise.embarkationPort
        this.disembarkationPort = cruise.disembarkationPort
        this.shipName = cruise.shipName
    }
}

export interface CruiseProperties extends TravelProductProperties {
    departureTime: Date
    arrivalTime: Date
    embarkationPort: string
    disembarkationPort: string
    shipName: string
}
